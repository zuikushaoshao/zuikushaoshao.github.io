<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>搭建个人博客hexo+github</title>
    <url>/posts/412bc846/</url>
    <content><![CDATA[<p>这篇文章只要是搭建了hexo，基本是搭建博客网上一大堆，所有后面没有想法在写下去，后面主要写工作、学习，日常笔记。</p>
<a id="more"></a>

<h1 id="搭建需要准备"><a href="#搭建需要准备" class="headerlink" title="搭建需要准备"></a>搭建需要准备</h1><blockquote>
<ul>
<li>安装node.js(后续需要npm 下载插件)</li>
<li>安装git，配置好git环境 </li>
<li>github申请账号</li>
<li>安装hexo</li>
<li>hexo 与 github 部署</li>
</ul>
</blockquote>
<h1 id="开始进入正题​-grimacing"><a href="#开始进入正题​-grimacing" class="headerlink" title="开始进入正题​ :grimacing:"></a>开始进入正题​ :grimacing:</h1><h2 id="1-node安装、git安装、github申请账号百度一大堆，略过略过。"><a href="#1-node安装、git安装、github申请账号百度一大堆，略过略过。" class="headerlink" title="1.node安装、git安装、github申请账号百度一大堆，略过略过。"></a>1.node安装、git安装、github申请账号百度一大堆，略过略过。</h2><img src="\gallery\photos\bokeConstructPhotos\bokeConstruct_1.gif" alt=" " style="zoom:200%;" />

<h2 id="2-安装hexo"><a href="#2-安装hexo" class="headerlink" title="2.安装hexo"></a>2.安装hexo</h2><p>在合适的磁盘中创建一个文件夹，我是在E盘建了了boke。</p>
<p>进入文件夹，右击会出现Git Bash。</p>
<img src="\gallery\photos\bokeConstructPhotos\bokeConstruct_2.jpg" alt="" style="zoom:50%;" />

<p>输入命令npm install hexo -g，回车，安装hexo。</p>
<img src="\gallery\photos\bokeConstructPhotos\bokeConstruct_3.jpg" style="zoom:75%;" />

<p>输入hexo -v，检查hexo是否安装成功</p>
<img src="\gallery\photos\bokeConstructPhotos\bokeConstruct_4.jpg" alt="" style="zoom:50%;" />

<p>输入hexo init 初始化该文件夹(我是第二次下载hexo，初始化不了，一直报错，就不截屏了:laughing:)<br>最后输入hexo s 启动服务，默认端口4000，如指定端口执行命令 hexo s -p 5000(注:端口号)</p>
<img src="\gallery\photos\bokeConstructPhotos\bokeConstruct_5.png" alt="" style="zoom:100%;" />

<hr>
<img src="\gallery\photos\bokeConstructPhotos\bokeConstruct_6.gif" alt="" style="zoom:100%;" />

<p>​                                                        <font color=red size=72>hexo搭建完成啦</font></p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo+github搭建博客</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot整合MybatisPlus</title>
    <url>/posts/265a8413/</url>
    <content><![CDATA[<p>上篇只搭建了项目，这篇记录整合MybatisPlus,并且使用MybatisPlus代码生成。可以快速生成 Bean、Mapper、Mapper XML、Service、Controller 等各个模块的代码，极大的提升了开发效率。结尾使用Spring自带任务定时器。</p>
<a id="more"></a>

<p>前言：记录的是我使用的功能，如需添加自己使用的可以去→<a href="https://baomidou.com/guide/generator.html#%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B"  target="_blank">MybatisPlus官网</a></p>
<h1 id="1、添加配置"><a href="#1、添加配置" class="headerlink" title="1、添加配置"></a>1、添加配置</h1><h2 id="1、添加-代码生成器-依赖，我这里使用的默认模板"><a href="#1、添加-代码生成器-依赖，我这里使用的默认模板" class="headerlink" title="1、添加 代码生成器 依赖，我这里使用的默认模板"></a>1、添加 代码生成器 依赖，我这里使用的默认模板</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--mybatis-plus--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--MybatisPlus代码生成--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--添加 模板引擎 依赖，MyBatis-Plus 支持 Velocity（默认）、Freemarker、Beetl，用户可以选择自己熟悉的模板引擎，如果都不满足您的要求，可以采用自定义模板引擎。--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Velocity（默认）--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.velocity<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>velocity-engine-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="2、application-yml配置"><a href="#2、application-yml配置" class="headerlink" title="2、application.yml配置"></a>2、application.yml配置</h2><p>把mybatis 替换成Plus的配置</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">#mybatis-plus</span><br><span class="line">mybatis-plus:</span><br><span class="line">  mapper-locations: classpath:mappers/*.xml</span><br><span class="line">  type-aliases-package: com.asiainfo.sms</span><br><span class="line">  global-config:</span><br><span class="line">    db-config:</span><br><span class="line">      id-type: auto #生成键ID</span><br></pre></td></tr></table></figure>


<h1 id="2、copy下官网代码修改"><a href="#2、copy下官网代码修改" class="headerlink" title="2、copy下官网代码修改"></a>2、copy下官网代码修改</h1><p>以下为类源码，可以copy直接使用，能用上的注释上我解释的很清楚了，如果不懂，ctrl+鼠标左键看类里面写的什么，可以做具体配置。</p>
<p>官网上教程也很明白。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.exceptions.MybatisPlusException;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.toolkit.StringPool;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.toolkit.StringUtils;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.AutoGenerator;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.InjectionConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.*;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.po.TableInfo;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * MybatisPlus 自动生成代码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CodeGenerationPlus</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * 读取控制台内容</span></span><br><span class="line"><span class="comment">     * &lt;/p&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">scanner</span><span class="params">(String tip)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        StringBuilder help = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        help.append(<span class="string">"请输入"</span> + tip + <span class="string">"："</span>);</span><br><span class="line">        System.out.println(help.toString());</span><br><span class="line">        <span class="keyword">if</span> (scanner.hasNext()) &#123;</span><br><span class="line">            String ipt = scanner.next();</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isNotBlank(ipt)) &#123;</span><br><span class="line">                <span class="keyword">return</span> ipt;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> MybatisPlusException(<span class="string">"请输入正确的"</span> + tip + <span class="string">"！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 代码生成器</span></span><br><span class="line">        AutoGenerator mpg = <span class="keyword">new</span> AutoGenerator();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 全局配置</span></span><br><span class="line">        GlobalConfig gc = <span class="keyword">new</span> GlobalConfig();</span><br><span class="line">        String projectPath = System.getProperty(<span class="string">"user.dir"</span>);</span><br><span class="line">        <span class="comment">//输出路径</span></span><br><span class="line">        gc.setOutputDir(projectPath + <span class="string">"/src/main/java"</span>);</span><br><span class="line">        <span class="comment">//作者名</span></span><br><span class="line">        gc.setAuthor(<span class="string">"ChenShaoHua"</span>);</span><br><span class="line">        gc.setOpen(<span class="keyword">false</span>);</span><br><span class="line">        <span class="comment">// gc.setSwagger2(true); 实体属性 Swagger2 注解</span></span><br><span class="line">        mpg.setGlobalConfig(gc);</span><br><span class="line">        <span class="comment">// 数据源配置</span></span><br><span class="line">        DataSourceConfig dsc = <span class="keyword">new</span> DataSourceConfig();</span><br><span class="line">        dsc.setUrl(<span class="string">"jdbc:mysql://127.0.0.1:3306/test?useSSL=false&amp;serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;allowMultiQueries=true&amp;serverTimezone=Asia/Shanghai"</span>);</span><br><span class="line">        dsc.setDriverName(<span class="string">"com.mysql.cj.jdbc.Driver"</span>);</span><br><span class="line">        dsc.setUsername(<span class="string">"root"</span>);</span><br><span class="line">        dsc.setPassword(<span class="string">"123456"</span>);</span><br><span class="line">        mpg.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 包配置  生成默认文件名可以看PackageConfig类</span></span><br><span class="line">        PackageConfig pc = <span class="keyword">new</span> PackageConfig();</span><br><span class="line">        String moduleName = scanner(<span class="string">"模块名"</span>);</span><br><span class="line">        pc.setModuleName(moduleName);</span><br><span class="line">        pc.setParent(<span class="string">"com"</span>);</span><br><span class="line">        <span class="comment">//实体类文件名</span></span><br><span class="line">        pc.setEntity(<span class="string">"bean"</span>);</span><br><span class="line">        mpg.setPackageInfo(pc);</span><br><span class="line">        <span class="comment">// 自定义配置 可以设置自定义输出文件</span></span><br><span class="line">        InjectionConfig cfg = <span class="keyword">new</span> InjectionConfig() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="comment">// to do nothing</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">// 如果模板引擎是 freemarker</span></span><br><span class="line">        <span class="comment">//String templatePath = "/templates/mapper.xml.ftl";</span></span><br><span class="line">        <span class="comment">// 如果模板引擎是 velocity</span></span><br><span class="line">         String templatePath = <span class="string">"/templates/mapper.xml.vm"</span>;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        cfg.setFileCreate(new IFileCreate() &#123;</span></span><br><span class="line"><span class="comment">            @Override</span></span><br><span class="line"><span class="comment">            public boolean isCreate(ConfigBuilder configBuilder, FileType fileType, String filePath) &#123;</span></span><br><span class="line"><span class="comment">                // 判断自定义文件夹是否需要创建</span></span><br><span class="line"><span class="comment">                checkDir("调用默认方法创建的目录，自定义目录用");</span></span><br><span class="line"><span class="comment">                if (fileType == FileType.MAPPER) &#123;</span></span><br><span class="line"><span class="comment">                    // 已经生成 mapper 文件判断存在，不想重新生成返回 false</span></span><br><span class="line"><span class="comment">                    return !new File(filePath).exists();</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">                // 允许生成模板文件</span></span><br><span class="line"><span class="comment">                return true;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;);</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="comment">// 自定义输出配置</span></span><br><span class="line">        List&lt;FileOutConfig&gt; focList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">// 自定义配置会被优先输出</span></span><br><span class="line">        focList.add(<span class="keyword">new</span> FileOutConfig(templatePath) &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> String <span class="title">outputFile</span><span class="params">(TableInfo tableInfo)</span> </span>&#123;</span><br><span class="line">                <span class="comment">// 自定义输出文件名 ， 如果你 Bean 设置了前后缀、此处注意 xml 的名称会跟着发生变化！！ 我这里处理将Mapper最为后缀</span></span><br><span class="line">                <span class="keyword">return</span> projectPath + <span class="string">"/src/main/resources/mapper/"</span> + tableInfo.getEntityName() + <span class="string">"Mapper"</span> + StringPool.DOT_XML;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        cfg.setFileOutConfigList(focList);</span><br><span class="line">        mpg.setCfg(cfg);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 配置模板</span></span><br><span class="line">        TemplateConfig templateConfig = <span class="keyword">new</span> TemplateConfig();</span><br><span class="line">        <span class="comment">// 配置自定义输出模板</span></span><br><span class="line">        <span class="comment">//指定自定义模板路径，注意不要带上.ftl/.vm, 会根据使用的模板引擎自动识别</span></span><br><span class="line">        <span class="comment">// templateConfig.setEntity("templates/entity2.java");</span></span><br><span class="line">        <span class="comment">// templateConfig.setService();</span></span><br><span class="line">        <span class="comment">// templateConfig.setController();</span></span><br><span class="line">        templateConfig.setXml(<span class="keyword">null</span>);</span><br><span class="line">        mpg.setTemplate(templateConfig);</span><br><span class="line">        <span class="comment">// 策略配置</span></span><br><span class="line">        StrategyConfig strategy = <span class="keyword">new</span> StrategyConfig();</span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        strategy.setRestControllerStyle(<span class="keyword">false</span>);</span><br><span class="line">        <span class="comment">// 公共父类</span></span><br><span class="line">        strategy.setSuperControllerClass(<span class="string">""</span>);</span><br><span class="line">        <span class="comment">// 写于父类中的公共字段</span></span><br><span class="line">        strategy.setInclude(scanner(<span class="string">"表名，多个英文逗号分割"</span>).split(<span class="string">","</span>));</span><br><span class="line">        strategy.setControllerMappingHyphenStyle(<span class="keyword">true</span>);</span><br><span class="line">        strategy.setTablePrefix(pc.getModuleName() + <span class="string">"_"</span>);</span><br><span class="line">        mpg.setStrategy(strategy);</span><br><span class="line">        mpg.execute();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="3、效果演示"><a href="#3、效果演示" class="headerlink" title="3、效果演示"></a>3、效果演示</h1><h2 id="1-Mysql数据库结构"><a href="#1-Mysql数据库结构" class="headerlink" title="1.Mysql数据库结构"></a>1.Mysql数据库结构</h2><img src="\gallery\photos\springBootImages\psMysql结构.jpg" alt=" " style="zoom:200%;" />

<h2 id="2-动图效果演示-动图加载可能慢，稍等下。"><a href="#2-动图效果演示-动图加载可能慢，稍等下。" class="headerlink" title="2.动图效果演示(动图加载可能慢，稍等下。)"></a>2.动图效果演示(动图加载可能慢，稍等下。)</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">请输入模块名：</span><br><span class="line">example</span><br><span class="line">请输入表名，多个英文逗号分割：</span><br><span class="line">user</span><br></pre></td></tr></table></figure>

<img src="\gallery\photos\springBootImages\mp代码生成效果图.jpg" alt=" " style="zoom:200%;" />

<h1 id="4、测试数据"><a href="#4、测试数据" class="headerlink" title="4、测试数据"></a>4、测试数据</h1><h2 id="1、添加thymeleaf配置"><a href="#1、添加thymeleaf配置" class="headerlink" title="1、添加thymeleaf配置"></a>1、添加thymeleaf配置</h2><h3>这里我们简单实用thymeleaf模板，渲染html页面查看测试数据</h3>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">thymeleaf:</span><br><span class="line">  cache: false # 开发时关闭缓存,不然没法看到实时页面</span><br><span class="line">#  prefix: classpath:&#x2F;templates&#x2F;   这里thymeleaf默认值已经指定了 无需设置</span><br><span class="line">#  suffix: .html</span><br></pre></td></tr></table></figure>

<img src="\gallery\photos\springBootImages\thymeleaf默认类.jpg" alt=" " style="zoom:200%;" />

<h2 id="2、编写代码"><a href="#2、编写代码" class="headerlink" title="2、编写代码"></a>2、编写代码</h2><h3 id="1-这里直接在业务实现层，使用MybatisPlus封装方法"><a href="#1-这里直接在业务实现层，使用MybatisPlus封装方法" class="headerlink" title="1.这里直接在业务实现层，使用MybatisPlus封装方法"></a>1.这里直接在业务实现层，使用MybatisPlus封装方法</h3><h6 id="业务层"><a href="#业务层" class="headerlink" title="业务层"></a>业务层</h6><img src="\gallery\photos\springBootImages\mp业务层.jpg" alt=" " style="zoom:200%;" />

<h6 id="业务实现层"><a href="#业务实现层" class="headerlink" title="业务实现层"></a>业务实现层</h6><img src="\gallery\photos\springBootImages\mp业务实现层.jpg" alt=" " style="zoom:200%;" />

<h3 id="2-控制层"><a href="#2-控制层" class="headerlink" title="2.控制层"></a>2.控制层</h3><img src="\gallery\photos\springBootImages\mp控制层.jpg" alt=" " style="zoom:200%;" />

<h3 id="3-完成测试数据"><a href="#3-完成测试数据" class="headerlink" title="3.完成测试数据"></a>3.完成测试数据</h3><img src="\gallery\photos\springBootImages\mp页面.jpg" alt=" " style="zoom:200%;" />

<h1 id="5、完成整合MP"><a href="#5、完成整合MP" class="headerlink" title="5、完成整合MP"></a>5、完成整合MP</h1><h2 id="1、记录整合MP，以及使用代码生成"><a href="#1、记录整合MP，以及使用代码生成" class="headerlink" title="1、记录整合MP，以及使用代码生成"></a>1、记录整合MP，以及使用代码生成</h2><h2 id="2、顺便记录下使用Spring定时器"><a href="#2、顺便记录下使用Spring定时器" class="headerlink" title="2、顺便记录下使用Spring定时器"></a>2、顺便记录下使用Spring定时器</h2><p>在SpringBoot启动类上添加注解</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@EnableScheduling</span> <span class="comment">//开启SpringBoot定时任务</span></span><br></pre></td></tr></table></figure>

<p>在需要定时执行方法上添加注解</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Scheduled</span>(cron = <span class="string">"0 */1 * * * ?"</span>)</span><br></pre></td></tr></table></figure>
<p>cron格式网上一大堆，每分钟执行一次</p>
<p><a href="https://crontab.guru/#05_*/1_*_*_*"  target="_blank">验证cron网站</a></p>
<img src="\gallery\photos\bokeConstructPhotos\bokeConstruct_6.gif" alt="" style="zoom:100%;" />]]></content>
      <categories>
        <category>java学习笔记</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot+SSM</title>
    <url>/posts/47650d0d/</url>
    <content><![CDATA[<p>记录下最简单的搭建SpringBoot的SSM，MySql数据库。</p>
<a id="more"></a>

<h1 id="1、创建项目"><a href="#1、创建项目" class="headerlink" title="1、创建项目"></a>1、创建项目</h1><h2 id="1-grimacing-跟着步骤直接看图-idea→File→Project…"><a href="#1-grimacing-跟着步骤直接看图-idea→File→Project…" class="headerlink" title="1.  :grimacing:跟着步骤直接看图 idea→File→Project…"></a>1.  :grimacing:跟着步骤直接看图 idea→File→Project…</h2><img src="\gallery\photos\springBootImages\1、newProject.jpg" alt=" " style="zoom:200%;" />
<img src="\gallery\photos\springBootImages\2、newProject.jpg" alt=" " style="zoom:200%;" />
<img src="\gallery\photos\springBootImages\3、newProject.jpg" alt=" " style="zoom:200%;" />
<img src="\gallery\photos\springBootImages\4、newProject.jpg" alt=" " style="zoom:200%;" />

<h2 id="2-项目结构"><a href="#2-项目结构" class="headerlink" title="2.项目结构"></a>2.项目结构</h2><img src="\gallery\photos\springBootImages\5、newProject.jpg" alt="项目结构" style="zoom:200%;" />

<h2 id="3-检查idea设置-scream-如果是maven的同学看这里！"><a href="#3-检查idea设置-scream-如果是maven的同学看这里！" class="headerlink" title="3.检查idea设置(:scream:如果是maven的同学看这里！)"></a>3.检查idea设置(:scream:如果是maven的同学看这里！)</h2><p>:pensive:相信大家肯定对这一步有疑惑，我已经踩了好几次坑了,避免大家采坑。</p>
<p>idea→setinngs…</p>
<img src="\gallery\photos\springBootImages\6、newProject.jpg" alt="避免采坑" style="zoom:200%;" />

<h1 id="2、配置"><a href="#2、配置" class="headerlink" title="2、配置"></a>2、配置</h1><h2 id="1-配置application-yml"><a href="#1-配置application-yml" class="headerlink" title="1.配置application.yml"></a>1.配置application.yml</h2><p>我习惯配置yml结尾，properties并无大大区别，如：name=张三</p>
<p>首先修改文件结尾 idea快捷键Shift+F6  Refactor更改</p>
<p>附上yml配置代码，同学可以直接粘贴使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 8080 #项目启动端口号</span><br><span class="line">spring:</span><br><span class="line">  mvc:</span><br><span class="line">    view:</span><br><span class="line">      prefix: classpath:&#x2F;templates&#x2F;</span><br><span class="line">      suffix: .html </span><br><span class="line">  datasource:</span><br><span class="line">    url: jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;test?useSSL&#x3D;false&amp;serverTimezone&#x3D;UTC&amp;useUnicode&#x3D;true&amp;characterEncoding&#x3D;utf-8&amp;allowMultiQueries&#x3D;true&amp;serverTimezone&#x3D;Asia&#x2F;Shanghai</span><br><span class="line">    username: root</span><br><span class="line">    password: &#39;123456&#39; #如果有符号加上单引号</span><br><span class="line">    # 连接池配置 最小空闲连接数量</span><br><span class="line">    minimum-idle: 5</span><br><span class="line">    # 空闲连接存活最大时间，默认600000（10分钟）</span><br><span class="line">    idle-timeout: 180000</span><br><span class="line">    # 连接池最大连接数，</span><br><span class="line">    maximum-pool-size: 10</span><br><span class="line">    # 此属性控制从池返回的连接的默认自动提交行为,默认值：true</span><br><span class="line">    auto-commit: true</span><br><span class="line">    # 连接池名称</span><br><span class="line">    pool-name: masterHikariCP</span><br><span class="line">    # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟</span><br><span class="line">    max-lifetime: 1800000</span><br><span class="line">    # 数据库连接超时时间,默认30秒，即30000</span><br><span class="line">    connection-timeout: 30000</span><br><span class="line">    connection-test-query: SELECT 1</span><br><span class="line">mybatis:</span><br><span class="line">  mapper-locations: classpath:mappers&#x2F;*.xml #xml文件</span><br><span class="line">  type-aliases-package: com.exaple.bean #指定扫描实体类</span><br></pre></td></tr></table></figure>

<h2 id="2-配置SpringBoot启动类添加扫描mapper类"><a href="#2-配置SpringBoot启动类添加扫描mapper类" class="headerlink" title="2.配置SpringBoot启动类添加扫描mapper类"></a>2.配置SpringBoot启动类添加扫描mapper类</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@MapperScan(&quot;com.example.mapper&quot;)</span><br></pre></td></tr></table></figure>



<h1 id="3、搭建完成"><a href="#3、搭建完成" class="headerlink" title="3、搭建完成"></a>3、搭建完成</h1><p>搭建SpringBoot完成，最终效果图附上:smile:</p>
<img src="\gallery\photos\springBootImages\7、newProject.jpg" alt="最终效果" style="zoom:200%;" />
<img src="\gallery\photos\bokeConstructPhotos\bokeConstruct_6.gif" alt="" style="zoom:100%;" />]]></content>
      <categories>
        <category>java学习笔记</category>
      </categories>
      <tags>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
</search>
